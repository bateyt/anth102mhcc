data(diamonds)
?diamonds
attach(diamonds)
# 2.2 scatterplot
xyplot(price~carat)
xyplot(x*y*z~carat)
xyplot(price~carat | clarity)
barchart(table(cut))
barchart(table(clarity), horizontal=FALSE)
barchart(table(clarity,cut),horizontal=FALSE, stack=FALSE)
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(diamonds, aes(carat, x*y*z)) + geom_point()
ggthemr('dust')
library(ggthemr)
ggthemr('dust')
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(diamonds, aes(carat, x*y*z)) + geom_point()
ggthemr('dust', spacing = 2)
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(diamonds, aes(carat, x*y*z)) + geom_point()
ggthemr('dust', spacing = 4)
ggthemr('dust', spacing = 3, panel.margin.y = 2)
ggthemr('dust', spacing = 3)
ggthemr('grape')
ggplot(diamonds, aes(carat, price)) + geom_point() + theme(axis.title.y=element_text(vjust=0.1))
ggplot(diamonds, aes(carat, price)) + geom_point() + theme(axis.title.y=element_text(vjust=0.5))
ggplot(diamonds, aes(carat, price)) + geom_point() + theme(axis.title.y=element_text(vjust=1))
ggplot(diamonds, aes(carat, x*y*z)) + geom_point() + theme(axis.title.y=element_text(vjust=0.1))
ggplot(diamonds, aes(carat, x*y*z)) + geom_point() + theme(axis.title.y=element_text(vjust=1))
ggplot(diamonds, aes(carat, price)) + geom_point() + facet_grid(.~clarity)
ggplot(diamonds, aes(carat, price)) + geom_point(aes(color=cut))
ggplot(diamonds, aes(carat,price)) + xlim(0,3) + geom_point(colour="steelblue", pch=3) + labs (x="weight of diamond in carats", y="price of diamond in dollars", title="Diamond Data")
# 3.2 histogram
ggplot(diamonds, aes(depth))+geom_histogram()
ggplot(diamonds, aes(depth))+geom_histogram(aes(fill = ..count..))
ggplot(diamonds, aes(carat,price)) + xlim(0,3) + geom_point(colour="steelblue", pch=3) + labs (x="weight of diamond in carats", y="price of diamond in dollars", title="Diamond Data")
ggplot(diamonds, aes(depth))+geom_histogram(aes(fill = ..count..))
ggplot(diamonds, aes(cut) )+ geom_bar(position="stack")
ggplot(diamonds, aes(clarity) )+ geom_bar(position="stack")
ggplot(diamonds, aes(clarity)) +facet_grid(.~cut) + geom_bar(position="dodge")
# 3.4 theme tweaks
library(RColorBrewer)
ggplot(diamonds, aes(clarity)) +facet_grid(.~cut) + geom_bar(position="dodge", fill="purple")+theme(panel.background = element_rect(fill='pink', colour='green'))
ggplot(diamonds, aes(clarity)) +facet_grid(.~cut) + geom_bar(position="dodge")+theme(panel.background = element_rect(fill='white', colour='black'))
ggplot(diamonds, aes(x=clarity, fill=factor(clarity))) +facet_grid(.~cut) + geom_bar(position="dodge")+ scale_fill_brewer(palette="Reds")
# this option can be used in some contexts
# scale_color_manual(values = c("yellow","orange","pink","red","purple"))
# 3.5 regression
ggplot(diamonds, aes(carat, price)) + geom_point() + geom_smooth(method=lm)
ggthemr('greyscale')
ggplot(diamonds, aes(carat, price)) + geom_point() + geom_smooth(method=lm)
ggplot(diamonds, aes(carat, price)) + geom_point() + stat_smooth()
ggplot(mtcars, aes(mpg, disp)) + geom_point() + stat_smooth()
install.packages(c("BGPhazard", "caret", "deSolve", "gam", "GB2", "KFAS", "markdown", "qdap", "randomForestSRC", "Rcmdr", "sandwich", "tm", "wordcloud"))
install.packages(c("caret", "deSolve", "gam", "GB2", "KFAS", "markdown", "qdap", "randomForestSRC", "Rcmdr", "sandwich", "tm", "wordcloud"))
install.packages(c("analogue", "BH", "FactoMineR", "georob", "ifultools", "mgcv", "Rcapture", "Runuran", "spatstat"))
install.packages(c("agricolae", "DBI", "e1071", "httr", "mixOmics", "nor1mix", "nsRFA", "prodlim", "RNetCDF"))
install.packages(c("checkmate", "cluster", "Cprob", "Ecdat", "haplo.stats", "kmi", "mixAK", "ppls", "wgaim"))
cite()
?cite
cite(R)
citation()
5160 - 50 - 60 - 50 - 1200
citation()
5160 - 50 - 60 - 50 - 1200 - 87 - 35 - 300
install.packages(c("asbio", "copula", "fMultivar", "jsonlite", "OrdFacReg", "pec", "R2HTML", "raster", "Rcmdr", "RcmdrMisc", "Rmpfr"))
library(popbio)
library(demog)
install.packages("C:/Users/Trey/Downloads/demogR_0.4.2.tar.gz", repos = NULL, type = "source")
install_github("hadley/bookdown")
install.packages("C:/Users/Trey/Downloads/bookdown-master.zip", repos = NULL)
search()
ls()
install_github('demogRanth','github_bateyt')
library(devtools)
install_github('demogRanth','github_bateyt')
install_github('demogRanth','github_bateyt')
devtools::install_github("bateyt/demogRanth")
search()
library(demogRanth)
data(thar)
load(goodman)
devtools::install_github("hadley/devtools")
install.packages("testthat")
search()
ls()
library(devtools)
has_devel()
ls()
search()
load("~/GitHub/hk43/Data/hazanth.2.RData")
View(hazanth.2)
load("~/GitHub/hk43/Data/age_stats.RData")
warnings()
View(suture)
View(ref)
search()
devtools::create("~/GitHub/demogRanth")
devtools::install_github(c("swirldev/swirl", "swirldev/swirlify"))
43596/12
install.packages(c("BGPhazard", "BMA", "caTools", "dismo", "emulator", "fpc", "geosphere", "htmltools", "hwriter", "MarkedPointProcess", "ngspatial", "operators", "rgl", "segmented", "sjPlot", "spam", "taxize"))
search()
ls()
3520 + 1500
(3520 + 1500) * .7
((3520 + 1500) * .7)/3
install.packages(c("copula", "corpcor", "data.table", "FeedbackTS", "fpc", "ggvis", "hierfstat", "mboost", "mfp", "multcomp", "nleqslv", "qdapTools", "quantmod", "R2HTML", "RandomFields", "Rcpp", "rgl", "shiny", "simPH", "soiltexture", "splancs", "testthat", "vec2dtransf"))
devtools::install_github("hadley/lazyeval", build_vignettes = FALSE)
devtools::install_github("hadley/dplyr", build_vignettes = FALSE)
devtools::install_github("rstudio/ggvis", build_vignettes = FALSE)
install.packages(c("googleVis", "knitr", "memisc", "RNetLogo"))
install.packages(c("clustvarsel", "cwhmisc", "pdc", "raster", "spgrass6", "spgwr"))
65-18
65-12
library(ggmap)
nica <- get_map(dominica)
nica <- get_map(location = dominica)
nica <- get_map(location = "Dominica")
ggmap(nica)
myjekyllsite = c("http://bateyt.github.io/anthRoblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll(highlight = "rouge")
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthRoblogR/rmds/2014-11-08-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthRoblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthRoblogR/rmds/2014-11-08-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthRoblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthRoblogR/rmds/2014-11-08-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthRoblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthRoblogR/rmds/2014-11-08-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthroblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll(highlight = "pygments")
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthroblogR/rmds/2014-11-09-welcome-to-anthroblogr.Rmd")
myjekyllsite = c("~/GitHub/anthroblogR")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll(highlight = "pygments")
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthroblogR/rmds/2014-11-09-welcome-to-anthroblogr.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthroblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll(highlight = "pygments")
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthroblogR/rmds/2014-11-09-welcome-to-anthroblogr.Rmd")
myjekyllsite = c("http://bateyt.github.io/anthroblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthroblogR/_drafts/rmds/2014-11-10-post-from-rmd.Rmd")
set.seed(1891)
rnorm(10_)
rnorm(10)
rnorm(10)
set.seed(1891)
rnorm(10)
library(ggvis)
set.seed(1891)
x <- rnorm(500)
ggvis(~x) %>% layer_histograms()
as.data.frame(x)
x <- as.data.frame(x)
x <- rnorm(500)
data <- as.data.frame(x)
data %>% ggvis(~x) %>% layer_histograms()
myjekyllsite = c("http://bateyt.github.io/anthroblogR/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/anthroblogR/_drafts/rmds/2014-11-11-ggvis.Rmd")
library(shiny)
runApp("~/R/App-1")
runApp("~/R/ggvis_shiny")
shiny::runApp('ggvis_shiny')
runApp("~/R/ggvis_shiny")
runApp("~/R/ggvis_shiny")
search()
library(shinyapps)
shinyapps::deployApp('~/R/ggvis_shiny')
search()
library(shinyapps)
shinyapps::deployApp('~/R/dnica_age-hist')
shiny::runApp('dnica_age-hist')
setwd("~/R/dnica_age-hist")
shiny::runApp()
load("~/R/dnica_age-hist/dnica.Rda")
load(dnica)
data(dnica)
shiny::runApp()
search()
shinyapps::deployApp('dnica_age-hist')
getwd()
setwd("~/R")
shiny::runApp('dnica_age-hist')
shiny::runApp('/R/dnica_age-hist')
shinyapps::deployApp('~/R/dnica_age-hist')
7.5/25
16-7.5
967 + 590
.01 * 7000000000
7e+01
7000000000 * .01
install.packages(c("analogue", "aqp", "arfima", "BayesTree", "bcpa", "BH", "BiodiversityR", "biwavelet", "bpcp", "car", "caret", "cocorresp", "DataCombine", "dbmss", "diagram", "elliptic", "fdrtool", "feature", "FME", "GeneNet", "geometry", "geomorph", "glogis", "Hmisc", "hypergeo", "knitr", "LambertW", "lava", "limSolve", "longitudinal", "lsmeans", "magrittr", "meta", "metafor", "mets", "mombf", "mvtnorm", "optimx", "papeR", "party", "pdc", "phangorn", "phylolm", "plotmo", "plotrix", "prim", "Quandl", "quantspec", "rdatamarket", "rgbif", "rgl", "rjson", "RobustAFT", "robustbase", "rootSolve", "Rsolnp", "rugarch", "seacarb", "secr", "shape", "sjPlot", "sp", "spatsurv", "SSN", "TH.data", "timereg", "TreePar", "trip", "TSclust", "vegan", "VGAM", "WARN", "x12", "x12GUI"))
install.packages(c("bipartite", "Bmix", "deldir", "diptest", "distrMod", "dr", "dse", "Ecfun", "effects", "emdbook", "GPArotation", "gWidgetsRGtk2", "jsonlite", "knitcitations", "Lmoments", "mixPHM", "multcomp", "plotKML", "plotmo", "RcppArmadillo", "RCurl", "Rmpfr", "rngwell19937", "secr", "sensitivity", "setRNG", "sn", "SweaveListingUtils", "Taxonstand"))
library(devtools)
install_github('timeline','jbryer')
install_github('timeline/jbryer')
install_github('jbryer/timeline')
library(timeline)
timelineShinyDemo()
search()
library(timeline)
demo(ww2)
704 * 7
(704 * 7) * 0.7
((704 * 7) * 0.7)/3
1149 + 2700
849 * 3
install.packages(c("alabama", "Delaporte", "GGally", "gplots", "MasterBayes", "rrcov", "sensitivity", "seqinr", "seriation", "spikeSlabGAM"))
load("C:/Users/Trey/Downloads/batey_cvr.lttr_fcrps-arch.tex")
intall.packages("tidyr")
install.packages("tidyr")
install.packages("reshape2")
install.packages(c("ape", "DataCombine", "extrafont", "gss", "gumbel", "meta", "network", "optextras", "pec", "popReconstruct", "prodlim", "pvclust", "randtoolbox", "Rcgmin", "RColorBrewer", "RCurl", "rhosp", "riskRegression", "robfilter", "Rvmmin", "shiny", "simPH", "tempdisagg", "tgp", "tourr", "VGAM"))
install.packages(c("catnet", "Cprob", "digest", "effects", "etm", "ftsa", "normalp", "NPMLEcmprsk", "plotKML", "plotmo", "prodlim", "Rcmdr", "repmis", "riskRegression", "seacarb", "spgwr", "stabs", "statnet.common", "TPmsm"))
3000 + 2700 + 1400
install.packages(c("actuar", "checkmate", "DSpat", "earth", "ergm", "FactoMineR", "fitdistrplus", "httr", "metacom", "qtl", "RJaCGH", "roxygen2", "segmented", "stringi"))
5400 + 900
install.packages(c("actuar", "adehabitat", "adehabitatHR", "adehabitatHS", "amap", "bibtex", "ca", "CARBayes", "DDD", "digest", "earth", "eha", "epiR", "exams", "extRemes", "fda", "forecast", "geonames", "ggmcmc", "GLDEX", "googleVis", "ismev", "latentnet", "manipulate", "maxLik", "mboost", "mvtnorm", "party", "penalized", "plsRcox", "plsRglm", "pvclust", "qdapTools", "qtl", "quantmod", "RcppArmadillo", "RcppEigen", "rgl", "rioja", "rmarkdown", "rmatio", "RMAWGEN", "rstudioapi", "season", "seqinr", "sjPlot", "spatstat", "splm", "stringdist", "surveillance", "taxize", "Taxonstand", "tcltk2", "YaleToolkit"))
16*12
17*12
15*9
7*40
204 + 135 + 300
5830 - 163 + 1350
7017 - (674 * 3)
674*3
library(devtools)
install.packages("rmarkdown"
)
install.packages("digest")
require(devtools)
install_github('timeline','jbryer')
require(devtools)
install_github('jbryer/timeline')
library(timeline)
data(ww2)
View(ww2)
View(ww2.events)
225/450
125/450
704 * 5
15 * 47.50
14 * 47.50
686.29 * 3
704 * 3
2112/3
704 * 5
(3520 * .7)/3
(3520 * .72)/3
(3520 * .73)/3
(3520)/3
950/1173
704 * 2
3520 + 1408
4928/3
(4928/3)*.7
2300+1150
17.06*40
17.06*40*4
17.06*40*4*.7
install.packages(c("caret", "classInt", "cobs", "copBasic", "DiceKriging", "dplyr", "epiR", "FeedbackTS", "gdistance", "glrt", "gplots", "gstat", "httr", "lazyeval", "lsmeans", "manipulate", "meta", "moments", "msm", "openair", "plotmo", "RUnit", "seacarb", "sfsmisc", "sp", "SparseM", "spdep", "surveillance", "survMisc", "swirl", "tframe", "TH.data", "tikzDevice", "TreePar"))
install.packages(c("ctv", "DEoptim", "kernlab", "manipulate", "mbbefd", "quantreg", "R2jags", "random", "RefManageR", "secr", "waveslim"))
install.packages(c("emdbook", "Geneland", "manipulate", "randomForestSRC", "seacarb", "simMSM", "stabs", "vegan"))
install.packages(c("ads", "manipulate", "prabclus", "Rttf2pt1", "s20x"))
install.packages("editR")
install.packages(c("shiny", "shinyFiles", "rmarkdown"))
if (!require("devtools")) install.packages("devtools")
devtools::install_github("trestletech/shinyAce")
devtools::install_github("ebailey78/shinyBS")
devtools::install_github("swarm-lab/editR")
install.packages("httr")
install.packages(c("shiny", "shinyFiles", "rmarkdown"))
if (!require("devtools")) install.packages("devtools")
devtools::install_github("trestletech/shinyAce")
devtools::install_github("ebailey78/shinyBS")
devtools::install_github("swarm-lab/editR")
library(editR)
editR("~/GitHub/dominica/_drafts/Rmd/2014-10-30-explore-dnica.Rmd")
library(timeline)
search()
install.packages(c("batchmeans", "bnlearn", "cairoDevice", "CompRandFld", "devtools", "dplyr", "exams", "flexmix", "Formula", "gstat", "knitr", "manipulate", "Matrix", "maxstat", "mbbefd", "ngspatial", "paleotree", "PBSmapping", "prabclus", "RandomFields", "robustbase", "shiny", "spacetime", "spdep", "sphet", "survSNP"))
library(PBSmodelling)
demo()
demo(PBSmodelling)
runDemos()
3,160.71*3
3160.71*12
4359.16*12
4359.16*12+43000
(4359.16*12+43000)/12
install.packages(c("bnlearn", "coxphf", "extRemes", "GeneNet", "googleVis", "LogicReg", "manipulate", "PBSmodelling", "plotrix", "psych", "repmis", "RgoogleMaps", "spacetime", "timeDate", "timeSeries", "unmarked"))
3900 * .03
394300/90
install.packages(c("lgcp", "manipulate", "NLP", "pscl", "Rcpp"))
install.packages(c("cluster", "Ecfun", "FeedbackTS", "RandomFields", "RcppArmadillo", "TraMineR", "VineCopula", "XLConnect"))
install.packages(c("BBmisc", "car", "clue", "cluster", "CompRandFld", "curl", "DataCombine", "distrDoc", "gamlss", "gamlss.cens", "gamlss.dist", "gridSVG", "GWmodel", "lmom", "lmomco", "manipulate", "maptools", "micromap", "mvoutlier", "numbers", "openair", "plotKML", "qvcalc", "RandomFields", "raster", "Rcmdr", "relimp", "rmarkdown", "seacarb", "shinyFiles", "simMSM", "simPH", "sjPlot", "spate", "spBayes", "tripEstimation", "TSP", "unmarked", "wgaim"))
119 + (109 * 2)
(119 + (109 * 2))/3
273 * 2
273 * 2 * 2
273 * 2 * .56
112 * 3
(26*3)+(13*2)
270 * 2 * .56
library(manipulate)
manipulate(plot(1:x), x = slider(1, 100))
install.packages(c("bayesSurv", "catnet", "Distance", "FactoMineR", "gamlss.mx", "lgcp", "lsmeans", "manipulate", "meta", "mfp", "micromap", "mixAK", "mrds", "phytools", "poppr", "proxy", "SemiCompRisks", "smoothSurv", "Tides"))
4177-390
4177-390-160-1200
704*2
704*2*.7
4177-390-160-1200+2700+1800
install.packages(c("class", "DataCombine", "KernSmooth", "manipulate", "nnet", "rpart", "shiny", "simPH", "spatial"))
library(devtools)
source_gist(9112634)
package(c("devtools", "ggplot2", "ggmap", "ggthemr", "rgdal", "scales", "dplyr", "Cairo",  "ggvis", "maptools", "sp", "spatial"), install = TRUE, update = TRUE)
install.packages(pkgs = i, quiet = quiet, ...)
search()
package(c("devtools", "ggplot2", "ggmap", "ggthemr", "rgdal", "scales", "dplyr", "Cairo",  "ggvis", "maptools", "sp", "spatial"), install = TRUE, update = TRUE)
install.packages(pkgs = i, quiet = quiet, ...)
search()
install.packages(c("clusterGeneration", "ensembleBMA", "lava", "manipulate", "multcomp", "segmented"))
62910*.7
(62910*.7)/12
(59700*.72)/12
search()
or.cens <- readOGR("~/GitHub/anthroblogR/_assets/gis/tl_2014_41_tract", "tl_2014_41_tract")
or.cens <- readOGR(dsn = "~/GitHub/anthroblogR/_assets/gis/tl_2014_41_tract", layer = "tl_2014_41_tract")
getwd()
or.cens <- readOGR(dsn = "GitHub/anthroblogR/_assets/gis/tl_2014_41_tract", layer = "tl_2014_41_tract")
or.cens <- readOGR(dsn = "/GitHub/anthroblogR/_assets/gis/tl_2014_41_tract", layer = "tl_2014_41_tract")
install.packages(c("AER", "aqp", "bootstrap", "cairoDevice", "clinfun", "crrstep", "exactRankTests", "fitdistrplus", "ForeCA", "Grid2Polygons", "ipred", "lattice", "manipulate", "OUwie", "R.methodsS3", "R.rsp", "rasterVis", "RSurvey", "survival", "SvyNom", "tseries"))
library(ggthemes)
install.packages("ggthemes")
20*1080
20*1680
45000/1680
25*1680
26*1680
27*1680
myjekyllsite = c("http://bateyt.github.io/cemetery/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/cemetery/_assets/rmds/2015-03-04-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/cemetery/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/cemetery/_assets/rmds/2015-03-04-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/cemetery/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/cemetery/_assets/rmds/2015-03-04-testpost.Rmd")
myjekyllsite = c("http://bateyt.github.io/cemetery/")
KnitPost <- function(input, base.url = myjekyllsite) {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
# be sure to edit file name for the original RMarkdown file
KnitPost("~/GitHub/cemetery/_assets/rmds/2015-03-04-why-github.Rmd")
library(rgdal)
orCens <- readOGR(dsn = "~/spatial/tl_2014_41_tract", layer = "tl_2014_41_tract")
getwd()
orCens <- readOGR(dsn = "C:/Users/Trey/Documents/R/spatial/tl_2014_41_tract", layer = "tl_2014_41_tract")
18/20
40/50
45/50
40/50
.85 * 50
.87.5 * 50
.875 * 50
44/50
47/50
.7*50
47/50
install.packages(c("abind", "alabama", "car", "choroplethr", "coda", "colorspace", "copula", "coxme", "CoxRidge", "dbmss", "DCluster", "deldir", "desirability", "dismo", "EnvStats", "FAdist", "fdrtool", "fields", "FieldSim", "ftsa", "gbm", "gdistance", "gems", "genalg", "ggmap", "ggplot2", "ggthemes", "ggvis", "gmm", "gstat", "HardyWeinberg", "ks", "lgcp", "longitudinal", "lsmeans", "manipulate", "marked", "mbbefd", "memisc", "midasr", "monreg", "msSurv", "multcomp", "multicool", "ncvreg", "nleqslv", "nortest", "numbers", "openNLP", "OUwie", "pegas", "pheatmap", "polyCub", "psd", "pwr", "qtl", "qualV", "quantmod", "R.oo", "R.utils", "R2jags", "randomForestSRC", "raster", "Rcpp", "RcppArmadillo", "rgbif", "rgdal", "RMark", "RODBC", "Rssa", "SDD", "sensitivity", "simMSM", "sjPlot", "spatstat", "spdep", "splancs", "survMisc", "timereg", "TSP", "VGAM", "XLConnect", "zoo"))
47/50
48/50
.85*50
((3/3) * 20) + ((6/6) * 30) + ((6/6) * 50)
((3/3) * 20) + ((5/6) * 30) + ((6/6) * 50)
((2/3) * 20) + ((3/6) * 30) + ((5/6) * 50)
(5/6) * 70
5/6
((2/3) * .20) + ((3/6) * .30) + ((5/6) * .50)
((3/3) * 20) + ((6/6) * 30) + ((5/6) * 50)
((2/3) * 20) + ((5/6) * 30) + ((5/6) * 50)
((2/3) * 20) + ((4/6) * 30) + ((5/6) * 50)
((3/3) * 20) + ((5/6) * 30) + ((6/6) * 50)
((2/3) * 20) + ((6/6) * 30) + ((4/6) * 50)
((2/3) * 20) + ((5/6) * 30) + ((6/6) * 50)
((3/3) * 20) + ((5/6) * 30) + ((5/6) * 50)
87-21
install.packages(c("biclust", "bisoreg", "checkmate", "DDD", "ensembleBMA", "futile.logger", "kohonen", "lambda.r", "latentnet", "manipulate", "move", "psd", "ROCR", "secr", "simecol", "sn", "timeROC"))
17/20
17.5/20
.33 * 20
getwd()
getwd
getwd()
setwd("C:/Users/Trey/Documents/GitHub/anth102mhcc/_drafts")
